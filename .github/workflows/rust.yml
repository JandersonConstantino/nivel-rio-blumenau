name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: lint:clippy
        run: cargo clippy --all-targets -- -D warnings
      - name: lint:fmt
        run: cargo fmt --all -- --check

  dependency-audit:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install cargo audit
        run: cargo install cargo-audit

      - name: Run cargo audit
        run: cargo audit

  release-windows:
    runs-on: windows-latest
    needs: [dependency-audit]
    env:
      RUSTFLAGS: "-C target-feature=+crt-static"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-wix
          version: latest
      - run: cargo wix -v --nocapture -o .
      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: ./*.msi
