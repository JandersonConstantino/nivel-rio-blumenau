name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: cargo test --verbose

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: lint:clippy
        run: cargo clippy --all-targets -- -D warnings
      - name: lint:fmt
        run: cargo fmt --all -- --check

  sonar:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install cargo-sonar and run Clippy
        run: |
          cargo install cargo-sonar
          cargo clippy --message-format json --all-targets -- -D warnings > my-clippy-report.json
          cargo sonar --clippy --clippy-path my-clippy-report.json

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dependency-audit:
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install cargo audit
        run: cargo install cargo-audit

      - name: Run cargo audit
        run: cargo audit
